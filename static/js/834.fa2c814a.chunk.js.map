{"version":3,"file":"static/js/834.fa2c814a.chunk.js","mappings":"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","sources":["components/Loader/Loader.styled.js","components/Loader/Loader.jsx","components/Form/Form.styled.js","components/Form/Form.jsx","components/ContactList/ContactList.styled.js","components/ContactItem/ContactItem.styled.js","components/Modal/Modal.styled.js","components/Modal/Modal.jsx","redux/hooks/useModalFormControl.js","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","pages/ContactsPage/ContactsPage.styled.js","pages/ContactsPage/ContactsPage.jsx","redux/hooks/useAddContact.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledLoader = styled.div`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  z-index: 99;\n`;\n","import { TailSpin } from 'react-loader-spinner';\nimport { StyledLoader } from './Loader.styled';\n\nexport const Loader = () => {\n  return (\n    <StyledLoader>\n      <TailSpin\n        ariaLabel=\"loading-indicator\"\n        height=\"80\"\n        width=\"80\"\n        radius=\"10\"\n        color=\"white\"\n      />\n    </StyledLoader>\n  );\n};\n","import styled from 'styled-components';\n\nexport const FormBox = styled.form`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  width: 400px;\n  border-radius: 5px;\n  padding: 10px;\n  background-color: rgba(244, 244, 246, 0.5);\n  box-shadow: 2px 2px 20px 10px rgba(0, 0, 0, 0.4);\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 20px;\n  color: #171818;\n  font-weight: 700;\n  font-size: 20px;\n`;\n\nexport const Input = styled.input`\n  width: 220px;\n  height: 25px;\n  margin-top: 10px;\n  border: 1px solid #030e1845;\n  border-radius: 5px;\n  box-shadow: 0 0 2px 1px;\n`;\n\nexport const Error = styled.p`\n  margin: 0;\n  color: red;\n  font-size: 16px;\n  text-align: center;\n  margin-bottom: 10px;\n`;\n\nexport const BtnSubmit = styled.button`\n  margin-top: 10px;\n  padding: 5px 10px;\n  border-radius: 5px;\n  border: none;\n  cursor: pointer;\n  background-color: #919297;\n  transition: color 500ms cubic-bezier(0.4, 0, 0.2, 1),\n    background-color 500ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    background-color: #212529;\n    color: #fff;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Loader } from 'components/Loader';\nimport { FormBox, Input, Label, Error, BtnSubmit } from './Form.styled';\n\nexport const Form = ({\n  btnText,\n  onSubmit,\n  contact,\n  isLoading,\n  register,\n  handleSubmit,\n  errors,\n}) => {\n  return (\n    <FormBox onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\n      <Label htmlFor=\"name\">\n        Name:\n        <Input\n          id=\"name\"\n          type=\"text\"\n          defaultValue={contact ? contact.name : ''}\n          {...register('name', {\n            required: 'This is required field',\n            minLength: {\n              value: 3,\n              message: 'Min length is 3 symbols',\n            },\n            pattern: {\n              value:\n                \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\",\n              message:\n                \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n            },\n          })}\n          placeholder=\"Surname Name\"\n        />\n      </Label>\n      {errors?.name && <Error>{errors?.name?.message || 'Error!'}</Error>}\n      <Label htmlFor=\"number\">\n        Number:\n        <Input\n          id=\"number\"\n          type=\"tel\"\n          defaultValue={contact ? contact.number : ''}\n          {...register('number', {\n            required: 'This is required field',\n            minLength: {\n              value: 5,\n              message: 'Min length is 5 symbols',\n            },\n            maxLength: {\n              value: 20,\n              message: 'Max length is 20 symbols',\n            },\n            pattern: {\n              value:\n                '+?d{1,4}?[-.s]?(?d{1,3}?)?[-.s]?d{1,4}[-.s]?d{1,4}[-.s]?d{1,9}',\n              message:\n                'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +',\n            },\n          })}\n          placeholder=\"+38(000)000-00-00\"\n        />\n      </Label>\n      {errors?.number && <Error>{errors?.number?.message || 'Error!'}</Error>}\n      <BtnSubmit disabled={isLoading} variant=\"contained\" type=\"submit\">\n        {isLoading && <Loader size={20} />}\n        {btnText}\n      </BtnSubmit>\n    </FormBox>\n  );\n};\n\nForm.propTypes = {\n  btnText: PropTypes.string.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  contact: PropTypes.object,\n  isLoading: PropTypes.bool.isRequired,\n  register: PropTypes.func.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  width: 600px;\n  background-color: rgba(244, 244, 246, 0.5);\n  box-shadow: 2px 2px 20px 10px rgba(0, 0, 0, 0.4);\n  border-radius: 5px;\n  padding: 10px;\n  margin: 0;\n`;\n","import styled from 'styled-components';\nimport Avatar from '@mui/material/Avatar';\n\nexport const Item = styled.li`\n  list-style: none;\n  background-color: rgba(0, 21, 255, 0.05);\n  border-radius: 5px;\n  margin-bottom: 10px;\n  display: flex;\n  align-items: center;\n  padding: 5px;\n  justify-content: space-between;\n  border: 1px solid #fff;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    border 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:not(:last-child) {\n    margin-bottom: 10px;\n  }\n  &:hover {\n    background-color: #f0efed;\n    border: 2px solid #acfc00;\n  }\n`;\n\nexport const ContactsInfo = styled.div`\n  display: flex;\n  align-items: center;\n`;\nexport const AvatarIcon = styled(Avatar)`\n  margin-right: 10px;\n`;\n\nexport const Contact = styled.p`\n  font-size: 18px;\n  font-weight: 500;\n`;\n\nexport const ButtonDel = styled.button`\n  padding: 5px 5px;\n  border-radius: 5px;\n  border: none;\n  cursor: pointer;\n  margin-right: 10px;\n  transition: color 500ms cubic-bezier(0.4, 0, 0.2, 1),\n    background-color 500ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    background-color: #212529;\n    color: #fff;\n  }\n`;\n\nexport const ButtonEdit = styled.button`\n  padding: 5px 5px;\n  border-radius: 5px;\n  border: none;\n  cursor: pointer;\n  transition: color 500ms cubic-bezier(0.4, 0, 0.2, 1),\n    background-color 500ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    background-color: #212529;\n    color: #fff;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.8);\n  z-index: 1000;\n`;\n\nexport const ModalBox = styled.div`\n  max-width: calc(100vw - 300px);\n  max-height: calc(100vh - 50px);\n  background-color: white;\n  position: relative;\n`;\n\nexport const CloseBtn = styled.button`\n  position: absolute;\n  top: 5px;\n  right: 5px;\n  border: none;\n  border-radius: 50%;\n  background-color: #919297;\n  color: black;\n  display: flex;\n  align-items: center;\n  padding: 3px;\n  &:hover {\n    background-color: black;\n    color: white;\n  }\n`;\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport { Overlay, ModalBox, CloseBtn } from './Modal.styled';\nimport PropTypes from 'prop-types';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { Form } from 'components/Form';\nimport { useModalFormControl } from 'redux/hooks/useModalFormControl';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport const Modal = ({ onClose, id }) => {\n  const { register, handleSubmit, errors, onSubmit, contact, isLoading } =\n    useModalFormControl(onClose, id);\n\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.code === 'Escape') {\n        onClose();\n      }\n    };\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [onClose]);\n\n  const handleBackdropClick = e => {\n    if (e.currentTarget === e.target) {\n      onClose();\n    }\n  };\n\n  return createPortal(\n    <Overlay onClick={handleBackdropClick}>\n      <ModalBox>\n        <Form\n          btnText=\"Save changes\"\n          onSubmit={onSubmit}\n          contact={contact}\n          isLoading={isLoading}\n          register={register}\n          handleSubmit={handleSubmit}\n          errors={errors}\n        />\n        <CloseBtn type=\"button\" onClick={() => onClose()}>\n          <CloseIcon />\n        </CloseBtn>\n      </ModalBox>\n    </Overlay>,\n    modalRoot\n  );\n};\n\nModal.propTypes = {\n  onClose: PropTypes.func,\n  id: PropTypes.string,\n};\n","import { useEffect } from 'react';\nimport {\n  useGetContactsQuery,\n  useUpdateContactMutation,\n} from 'redux/contacts/contactsApi';\nimport toast from 'react-hot-toast';\nimport { useForm } from 'react-hook-form';\n\nexport const useModalFormControl = (onClose, id) => {\n  const { data } = useGetContactsQuery();\n  const contact = data.find(item => item.id === id);\n  const [updateContact, { isLoading, isSuccess, isError }] =\n    useUpdateContactMutation();\n\n  useEffect(() => {\n    if (isSuccess) {\n      toast.success('Contact updated');\n    }\n    if (isError) {\n      toast.error('Sorry, try again');\n    }\n  }, [isSuccess, isError]);\n\n  const onSubmit = async fields => {\n    try {\n      await updateContact({ id: contact.id, ...fields });\n      onClose();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm();\n\n  return { register, handleSubmit, errors, onSubmit, contact, isLoading };\n};\n","import {\n  Item,\n  AvatarIcon,\n  ButtonDel,\n  ButtonEdit,\n  ContactsInfo,\n  Contact,\n} from './ContactItem.styled';\nimport PropTypes from 'prop-types';\nimport { useDeleteContactMutation } from 'redux/contacts/contactsApi';\nimport { Loader } from 'components/Loader';\nimport { useEffect } from 'react';\nimport toast from 'react-hot-toast';\nimport { useState } from 'react';\nimport { Modal } from 'components/Modal';\nimport { MdDeleteForever } from 'react-icons/md';\nimport { FiEdit } from 'react-icons/fi';\n\nexport const ContactItem = ({ id, name, number }) => {\n  const [deleteContact, { isLoading: isDeleting, isSuccess }] =\n    useDeleteContactMutation();\n  useEffect(() => {\n    if (isSuccess) {\n      toast.success('Contact deleted');\n    }\n  }, [isSuccess]);\n\n  const [modalOpen, setModalOpen] = useState(false);\n  const showModal = () => {\n    setModalOpen(prevState => !prevState);\n  };\n\n  return (\n    <>\n      <Item key={id}>\n        <ContactsInfo>\n          <AvatarIcon>{name.charAt(0).toUpperCase()}</AvatarIcon>\n          <Contact>\n            {name}: {number}\n          </Contact>\n        </ContactsInfo>\n        <div>\n          <ButtonDel type=\"button\" onClick={() => deleteContact(id)}>\n            <MdDeleteForever size={20} />\n            {isDeleting && <Loader />}\n          </ButtonDel>\n          <ButtonEdit type=\"button\" onClick={showModal}>\n            <FiEdit size={20} />\n          </ButtonEdit>\n        </div>\n      </Item>\n      {modalOpen && (\n        <Modal onClose={showModal} isModalOpen={modalOpen} id={id} />\n      )}\n    </>\n  );\n};\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import { List } from './ContactList.styled';\nimport { ContactItem } from '../ContactItem';\nimport { useSelector } from 'react-redux';\nimport { getFilter } from 'redux/contacts/contactsSlice';\nimport { useGetContactsQuery } from 'redux/contacts/contactsApi';\nimport { Loader } from 'components/Loader';\nimport { useMemo } from 'react';\n\nexport const ContactList = () => {\n  const { data: contacts, error, isLoading } = useGetContactsQuery();\n\n  const filterContact = useSelector(getFilter);\n\n  const visibleContacts = useMemo(() => {\n    return (\n      contacts?.filter(({ name }) =>\n        name.toLowerCase().includes(filterContact.toLowerCase())\n      ) ?? []\n    );\n  }, [filterContact, contacts]);\n\n  return (\n    <>\n      {error && <p>Contacts not found</p>}\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <List>\n          {visibleContacts?.map(({ id, name, number }) => (\n            <ContactItem key={id} name={name} number={number} id={id} />\n          ))}\n        </List>\n      )}\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 10px;\n  margin-top: 20px;\n  font-size: 20px;\n  width: 400px;\n  font-weight: 700;\n`;\n\nexport const Input = styled.input`\n  margin-top: 10px;\n  width: 400px;\n  padding: 5px;\n  margin-bottom: 10px;\n  border: 1px solid #030e1845;\n  border-radius: 5px;\n  box-shadow: 2px 2px 20px 10px rgba(0, 0, 0, 0.4);\n`;\n","import { Label, Input } from './Filter.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getFilter, filter } from 'redux/contacts/contactsSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filterName = useSelector(getFilter);\n\n  const handleInput = evt => {\n    dispatch(filter(evt.currentTarget.value));\n  };\n  return (\n    <Label>\n      Find contacts by name:\n      <Input\n        type=\"text\"\n        name=\"filter\"\n        value={filterName}\n        onChange={handleInput}\n      />\n    </Label>\n  );\n};\n","import styled from 'styled-components';\nimport img from 'images/cell-phones.jpg';\n\nexport const Container = styled.div`\n  background: url(${img});\n  background-size: cover;\n  background-position: center;\n  background-repeat: no-repeat;\n  height: 100vh;\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  padding-top: 50px;\n`;\n","import { Form } from 'components/Form';\nimport { ContactList } from 'components/ContactList';\nimport { Filter } from 'components/Filter';\nimport { useGetContactsQuery } from 'redux/contacts/contactsApi';\nimport { useAddContact } from 'redux/hooks/useAddContact';\nimport { Container } from './ContactsPage.styled';\n\nconst ContactsPage = () => {\n  const { data } = useGetContactsQuery();\n  const { register, handleSubmit, errors, isLoading, onSubmit } =\n    useAddContact();\n  return (\n    <Container>\n      <h1>Phonebook</h1>\n      <Form\n        btnText=\"Add contact\"\n        onSubmit={onSubmit}\n        isLoading={isLoading}\n        register={register}\n        handleSubmit={handleSubmit}\n        errors={errors}\n      />\n      {data && (data.length > 1 ? <Filter /> : '')}\n      <h2>Contacts</h2>\n      <ContactList />\n    </Container>\n  );\n};\n\nexport default ContactsPage;\n","import { useForm } from 'react-hook-form';\nimport {\n  useCreateContactMutation,\n  useGetContactsQuery,\n} from 'redux/contacts/contactsApi';\nimport { useEffect } from 'react';\nimport toast from 'react-hot-toast';\n\nexport const useAddContact = () => {\n  const {\n    register,\n    reset,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({\n    defaultValues: {\n      name: '',\n      number: '',\n    },\n    mode: 'onBlur',\n  });\n  const [createContact, { isLoading, isSuccess, isError }] =\n    useCreateContactMutation();\n  const { data: contacts } = useGetContactsQuery();\n\n  useEffect(() => {\n    if (isSuccess) {\n      toast.success('Contact added');\n    }\n    if (isError) {\n      toast.error('Sorry, try again');\n    }\n  }, [isSuccess, isError]);\n\n  const onSubmit = async values => {\n    try {\n      const contact = { name: values.name, number: values.number };\n      const findName = contacts.find(\n        contact => contact.name.toLowerCase() === values.name.toLowerCase()\n      );\n\n      if (findName) {\n        return toast.error(`${values.name} is already in contacts.`);\n      }\n      const findNumber = contacts.find(\n        contact => contact.number === values.number\n      );\n      if (findNumber) {\n        return toast.error('This phone number is already in contacts.');\n      } else {\n        createContact(contact);\n        reset();\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return { register, handleSubmit, errors, isLoading, onSubmit };\n};\n"],"names":["StyledLoader","styled","Loader","ariaLabel","height","width","radius","color","FormBox","Label","Input","Error","BtnSubmit","Form","btnText","onSubmit","contact","isLoading","register","handleSubmit","errors","autoComplete","htmlFor","id","type","defaultValue","name","required","minLength","value","message","pattern","placeholder","number","maxLength","disabled","variant","size","List","Item","ContactsInfo","AvatarIcon","Avatar","Contact","ButtonDel","ButtonEdit","Overlay","ModalBox","CloseBtn","modalRoot","document","querySelector","Modal","onClose","useGetContactsQuery","data","find","item","useUpdateContactMutation","updateContact","isSuccess","isError","useEffect","toast","fields","console","log","useForm","formState","useModalFormControl","handleKeyDown","e","code","window","addEventListener","removeEventListener","createPortal","onClick","currentTarget","target","Close","ContactItem","useDeleteContactMutation","deleteContact","isDeleting","useState","modalOpen","setModalOpen","showModal","prevState","charAt","toUpperCase","isModalOpen","ContactList","contacts","error","filterContact","useSelector","getFilter","visibleContacts","useMemo","filter","toLowerCase","includes","map","Filter","dispatch","useDispatch","filterName","onChange","evt","Container","img","defaultValues","mode","reset","useCreateContactMutation","createContact","values","findName","findNumber","useAddContact","length"],"sourceRoot":""}