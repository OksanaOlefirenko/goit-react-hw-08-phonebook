{"version":3,"file":"static/js/977.623f4e16.chunk.js","mappings":"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","sources":["components/AuthorizationForm/AuthorizationForm.styled.js","components/AuthorizationForm/AuthorizationForm.jsx","pages/LoginPage/LoginPage.styled.js","pages/LoginPage/LoginPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n`;\n\nexport const Form = styled.form`\n  width: 350px;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Text = styled.h1`\n  font-size: 55px;\n  font-weight: 600;\n  color: white;\n  padding-top: 150px;\n  text-shadow: 7px 4px 7px #8d9599;\n`;\n\nexport const Error = styled.p`\n  color: white;\n  font-size: 16px;\n  text-align: center;\n  margin-top: 10px;\n`;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport authSelectors from 'redux/auth/authSelectors';\nimport { authOperations } from 'redux/auth';\nimport { Container, Form, Text, Error } from './AuthorizationForm.styled';\nimport { Button, TextField } from '@mui/material';\n\nexport const AuthorizationForm = () => {\n  const dispatch = useDispatch();\n  const error = useSelector(authSelectors.getUserError);\n  const location = useLocation().pathname;\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        return setName(value);\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (location === '/register') {\n      if (name === '' || email === '' || password === '') return;\n      dispatch(authOperations.register({ name, email, password }));\n      setName('');\n      setEmail('');\n      setPassword('');\n    }\n\n    if (location === '/login') {\n      if (email === '' || password === '') return;\n      dispatch(authOperations.logIn({ email, password }));\n      setEmail('');\n      setPassword('');\n    }\n  };\n\n  const textFieldSX = {\n    '& .MuiOutlinedInput-root': {\n      '& > fieldset': {\n        m: 1,\n        borderWidth: 2,\n        borderColor: 'rgba(255, 255, 255, 0.5)',\n      },\n      '&:hover fieldset': {\n        borderColor: 'rgba(255, 255, 255, 0.9)',\n      },\n      '&.Mui-focused fieldset': {\n        borderColor: 'rgba(255, 255, 255, 0.9)',\n      },\n    },\n  };\n\n  const buttonSX = {\n    fontSize: 17,\n    fontWeight: 700,\n    borderWidth: 2,\n    marginTop: 5,\n    backgroundColor: 'transparent',\n    borderColor: 'rgba(255, 255, 255, 0.5)',\n    color: 'rgba(255, 255, 255, 0.9)',\n    '&:hover': {\n      borderColor: 'rgba(255, 255, 255, 0.9)',\n      color: 'rgba(255, 255, 255, 0.9)',\n      borderWidth: 2,\n    },\n  };\n\n  return (\n    <Container>\n      <Text>\n        {location === '/login'\n          ? \"Let's login to start\"\n          : \"Let's create your account\"}\n      </Text>\n      <Form onSubmit={handleSubmit} autoComplete=\"off\">\n        {location === '/register' && (\n          <TextField\n            variant=\"outlined\"\n            label=\"Name\"\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={handleChange}\n            placeholder=\"Name Surname\"\n            required\n            sx={textFieldSX}\n            inputProps={{\n              style: {\n                fontSize: 15,\n                fontWeight: 700,\n                color: 'rgba(255, 255, 255, 0.9)',\n              },\n            }}\n            InputLabelProps={{\n              style: {\n                fontSize: 20,\n                fontWeight: 700,\n                color: 'rgba(255, 255, 255, 0.5)',\n              },\n            }}\n          />\n        )}\n        <TextField\n          variant=\"outlined\"\n          label=\"Email\"\n          type=\"email\"\n          name=\"email\"\n          value={email}\n          onChange={handleChange}\n          placeholder=\"example@mail.com\"\n          required\n          sx={textFieldSX}\n          inputProps={{\n            style: {\n              fontSize: 15,\n              fontWeight: 700,\n              color: 'rgba(255, 255, 255, 0.9)',\n            },\n          }}\n          InputLabelProps={{\n            style: {\n              fontSize: 20,\n              fontWeight: 700,\n              color: 'rgba(255, 255, 255, 0.5)',\n            },\n          }}\n        />\n        <TextField\n          variant=\"outlined\"\n          label=\"Password\"\n          type=\"password\"\n          name=\"password\"\n          value={password}\n          onChange={handleChange}\n          placeholder=\"at least 8 chars, numbers and letters\"\n          required\n          sx={textFieldSX}\n          inputProps={{\n            style: {\n              fontSize: 15,\n              fontWeight: 700,\n              color: 'rgba(255, 255, 255, 0.9)',\n            },\n          }}\n          InputLabelProps={{\n            style: {\n              fontSize: 20,\n              fontWeight: 700,\n              color: 'rgba(255, 255, 255, 0.5)',\n            },\n          }}\n        />\n\n        <Button type=\"submit\" variant=\"outlined\" sx={buttonSX}>\n          {location === '/login' ? 'Login' : 'Register'}\n        </Button>\n        {error && <Error>{error}</Error>}\n      </Form>\n    </Container>\n  );\n};\n","import styled from 'styled-components';\nimport background from '../../images/telephone.jpg';\n\nexport const Container = styled.div`\n  min-height: 100vh;\n  display: flex;\n  justify-content: center;\n  background-image: url(${background});\n  background-size: cover;\n  background-position: center;\n  background-repeat: no-repeat;\n`;\n","import { AuthorizationForm } from 'components/AuthorizationForm';\nimport { Container } from './LoginPage.styled';\n\nconst LoginPage = () => {\n  return (\n    <Container>\n      <AuthorizationForm />\n    </Container>\n  );\n};\n\nexport default LoginPage;\n"],"names":["Container","styled","Form","Text","Error","AuthorizationForm","dispatch","useDispatch","error","useSelector","authSelectors","location","useLocation","pathname","useState","name","setName","email","setEmail","password","setPassword","handleChange","target","value","textFieldSX","m","borderWidth","borderColor","onSubmit","e","preventDefault","authOperations","autoComplete","TextField","variant","label","type","onChange","placeholder","required","sx","inputProps","style","fontSize","fontWeight","color","InputLabelProps","Button","marginTop","backgroundColor","background"],"sourceRoot":""}