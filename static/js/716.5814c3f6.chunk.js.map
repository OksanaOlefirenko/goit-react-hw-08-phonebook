{"version":3,"file":"static/js/716.5814c3f6.chunk.js","mappings":"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","sources":["components/Form/Form.styled.js","components/Loader/Loader.styled.js","components/Loader/Loader.jsx","components/Form/Form.jsx","components/ContactList/ContactList.styled.js","components/ContactItem/ContactItem.styled.js","components/Modal/Modal.styled.js","components/Modal/Modal.jsx","redux/hooks/useModalFormControl.js","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","pages/ContactsPage/ContactsPage.styled.js","pages/ContactsPage/ContactsPage.jsx","redux/hooks/useAddContact.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const FormBox = styled.form`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  width: 400px;\n  border-radius: 5px;\n  padding: 10px;\n  background-color: rgba(244, 244, 246, 0.5);\n  box-shadow: 2px 2px 20px 10px rgba(0, 0, 0, 0.4);\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 20px;\n  color: white;\n  font-weight: 700;\n  font-size: 20px;\n`;\n\nexport const Input = styled.input`\n  width: 220px;\n  height: 25px;\n  margin-top: 10px;\n  border: 1px solid #030e1845;\n  border-radius: 5px;\n  box-shadow: 0 0 2px 1px;\n`;\n\nexport const Error = styled.p`\n  margin: 0;\n  color: red;\n  font-size: 16px;\n  text-align: center;\n  margin-bottom: 10px;\n`;\n\nexport const BtnSubmit = styled.button`\n  margin-top: 10px;\n  padding: 5px 10px;\n  border-radius: 5px;\n  border: none;\n  cursor: pointer;\n  transition: color 500ms cubic-bezier(0.4, 0, 0.2, 1),\n    background-color 500ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    background-color: #212529;\n    color: #fff;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const StyledLoader = styled.div`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  z-index: 99;\n`;\n","import { TailSpin } from 'react-loader-spinner';\nimport { StyledLoader } from './Loader.styled';\n\nexport const Loader = () => {\n  return (\n    <StyledLoader>\n      <TailSpin\n        ariaLabel=\"loading-indicator\"\n        height=\"80\"\n        width=\"80\"\n        radius=\"10\"\n        color=\"green\"\n      />\n    </StyledLoader>\n  );\n};\n","// import { useForm } from 'react-hook-form';\nimport PropTypes from 'prop-types';\nimport { Loader } from 'components/Loader';\nimport { FormBox, Input, Label, Error, BtnSubmit } from './Form.styled';\n\nexport const Form = ({\n  btnText,\n  onSubmit,\n  contact,\n  isLoading,\n  register,\n  handleSubmit,\n  errors,\n}) => {\n  return (\n    <FormBox onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\n      <Label htmlFor=\"name\">\n        Name:\n        <Input\n          id=\"name\"\n          type=\"text\"\n          defaultValue={contact ? contact.name : ''}\n          {...register('name', {\n            required: 'This is required field',\n            minLength: {\n              value: 3,\n              message: 'Min length is 3 symbols',\n            },\n            pattern: {\n              value:\n                \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\",\n              message:\n                \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n            },\n          })}\n          placeholder=\"Surname Name\"\n        />\n      </Label>\n      {errors?.name && <Error>{errors?.name?.message || 'Error!'}</Error>}\n      <Label htmlFor=\"number\">\n        Number:\n        <Input\n          id=\"number\"\n          type=\"tel\"\n          defaultValue={contact ? contact.number : ''}\n          {...register('number', {\n            required: 'This is required field',\n            minLength: {\n              value: 5,\n              message: 'Min length is 5 symbols',\n            },\n            maxLength: {\n              value: 20,\n              message: 'Max length is 20 symbols',\n            },\n            pattern: {\n              value:\n                '+?d{1,4}?[-.s]?(?d{1,3}?)?[-.s]?d{1,4}[-.s]?d{1,4}[-.s]?d{1,9}',\n              message:\n                'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +',\n            },\n          })}\n          placeholder=\"+38(000)000-00-00\"\n        />\n      </Label>\n      {errors?.number && <Error>{errors?.number?.message || 'Error!'}</Error>}\n      <BtnSubmit disabled={isLoading} variant=\"contained\" type=\"submit\">\n        {isLoading && <Loader size={20} />}\n        {btnText}\n      </BtnSubmit>\n    </FormBox>\n  );\n};\n\nForm.propTypes = {\n  btnText: PropTypes.string.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  contact: PropTypes.object,\n  isLoading: PropTypes.bool.isRequired,\n  register: PropTypes.func.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  padding: 0 15px;\n  width: 400px;\n`;\n","import styled from 'styled-components';\nimport Avatar from '@mui/material/Avatar';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport Button from '@mui/material/Button';\n// import ListItem from '@mui/material/ListItem';\n\nexport const Item = styled.li`\n  list-style: none;\n  background-color: rgba(0, 21, 255, 0.05);\n  border-radius: 4px;\n  margin-bottom: 10px;\n  display: flex;\n  justify-content: space-between;\n  border: 2px solid #fff;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    border 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:not(:last-child) {\n    margin-bottom: 10px;\n  }\n  &:hover {\n    background-color: #f0efed;\n    border: 2px solid #acfc00;\n  }\n`;\n\nexport const AvatarIcon = styled(Avatar)`\n  margin-right: 10px;\n`;\n\nexport const Delete = styled(DeleteIcon)`\n  margin-right: -10px;\n  margin-left: 4px;\n`;\n\nexport const Edit = styled(EditIcon)`\n  margin-right: -10px;\n  margin-left: 4px;\n`;\n\n// export const Button = styled.button`\n//   border-radius: 5px;\n//   margin-left: 10px;\n//   font-size: 15px;\n//   cursor: pointer;\n//   :hover {\n//     background-color: blueviolet;\n//     color: white;\n//   }\n// `;\n\nexport const BtnDelete = styled(Button)`\n  min-width: 30px;\n  margin-right: 5px;\n`;\nexport const BtnEdit = styled(Button)`\n  min-width: 30px;\n`;\n","import styled from 'styled-components';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.8);\n  z-index: 1000;\n`;\n\nexport const ModalBox = styled.div`\n  /* position: relative; */\n  max-width: calc(100vw - 300px);\n  max-height: calc(100vh - 50px);\n  background-color: white;\n`;\n\nexport const CloseBtn = styled.button`\n  position: absolute;\n  top: 5px;\n  right: 5px;\n  border: none;\n  border-radius: 50%;\n  background-color: #1976d2;\n  color: white;\n  display: flex;\n  align-items: center;\n  padding: 3px;\n  &:hover {\n    background-color: #1565c0;\n  }\n`;\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport { Overlay, ModalBox, CloseBtn } from './Modal.styled';\nimport PropTypes from 'prop-types';\nimport CloseIcon from '@mui/icons-material/Close';\n\n// import toast from 'react-hot-toast';\n// import { useForm } from 'react-hook-form';\nimport { Form } from 'components/Form';\nimport { useModalFormControl } from 'redux/hooks/useModalFormControl';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport const Modal = ({ onClose, id }) => {\n  const { register, handleSubmit, errors, onSubmit, contact, isLoading } =\n    useModalFormControl(onClose, id);\n\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.code === 'Escape') {\n        onClose();\n      }\n    };\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [onClose]);\n\n  const handleBackdropClick = e => {\n    if (e.currentTarget === e.target) {\n      onClose();\n    }\n  };\n\n  return createPortal(\n    <Overlay onClick={handleBackdropClick}>\n      <ModalBox>\n        <Form\n          btnText=\"Save changes\"\n          onSubmit={onSubmit}\n          contact={contact}\n          isLoading={isLoading}\n          register={register}\n          handleSubmit={handleSubmit}\n          errors={errors}\n        />\n        <CloseBtn type=\"button\" onClick={() => onClose()}>\n          <CloseIcon />\n        </CloseBtn>\n      </ModalBox>\n    </Overlay>,\n    modalRoot\n  );\n};\n\nModal.propTypes = {\n  onClose: PropTypes.func,\n  id: PropTypes.string,\n};\n","import { useEffect } from 'react';\nimport {\n  useGetContactsQuery,\n  useUpdateContactMutation,\n} from 'redux/contacts/contactsApi';\nimport toast from 'react-hot-toast';\nimport { useForm } from 'react-hook-form';\n\nexport const useModalFormControl = (onClose, id) => {\n  const { data } = useGetContactsQuery();\n  const contact = data.find(item => item.id === id);\n  const [updateContact, { isLoading, isSuccess, isError }] =\n    useUpdateContactMutation();\n\n  useEffect(() => {\n    if (isSuccess) {\n      toast.success('Contact updated');\n    }\n    if (isError) {\n      toast.error('Sorry, try again');\n    }\n  }, [isSuccess, isError]);\n\n  const onSubmit = async fields => {\n    try {\n      await updateContact({ id: contact.id, ...fields });\n      onClose();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm();\n\n  return { register, handleSubmit, errors, onSubmit, contact, isLoading };\n};\n","import {\n  Item,\n  BtnDelete,\n  BtnEdit,\n  Delete,\n  Edit,\n  AvatarIcon,\n} from './ContactItem.styled';\nimport PropTypes from 'prop-types';\nimport { useDeleteContactMutation } from 'redux/contacts/contactsApi';\nimport { Loader } from 'components/Loader';\nimport { useEffect } from 'react';\nimport toast from 'react-hot-toast';\nimport { useState } from 'react';\nimport { Modal } from 'components/Modal';\n\nexport const ContactItem = ({ id, name, number }) => {\n  const [deleteContact, { isLoading: isDeleting, isSuccess }] =\n    useDeleteContactMutation();\n  useEffect(() => {\n    if (isSuccess) {\n      toast.success('Contact deleted');\n    }\n  }, [isSuccess]);\n\n  const [modalOpen, setModalOpen] = useState(false);\n  const showModal = () => {\n    setModalOpen(prevState => !prevState);\n  };\n\n  return (\n    <>\n      <Item key={id}>\n        <AvatarIcon>{name.charAt(0).toUpperCase()}</AvatarIcon>\n        <p>\n          {name}: {number}\n        </p>\n        <BtnDelete\n          type=\"button\"\n          onClick={() => deleteContact(id)}\n          disabled={isDeleting}\n          variant=\"outlined\"\n          startIcon={<Delete />}\n        >\n          {isDeleting && <Loader />}\n        </BtnDelete>\n        <BtnEdit\n          type=\"button\"\n          onClick={showModal}\n          variant=\"outlined\"\n          startIcon={<Edit />}\n        />\n      </Item>\n      {modalOpen && (\n        <Modal onClose={showModal} isModalOpen={modalOpen} id={id} />\n      )}\n    </>\n  );\n};\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import { List } from './ContactList.styled';\nimport { ContactItem } from '../ContactItem';\nimport { useSelector } from 'react-redux';\nimport { getFilter } from 'redux/contacts/contactsSlice';\nimport { useGetContactsQuery } from 'redux/contacts/contactsApi';\nimport { Loader } from 'components/Loader';\nimport { useMemo } from 'react';\n\nexport const ContactList = () => {\n  const { data: contacts, error, isLoading } = useGetContactsQuery();\n\n  const filterContact = useSelector(getFilter);\n\n  const visibleContacts = useMemo(() => {\n    return (\n      contacts?.filter(({ name }) =>\n        name.toLowerCase().includes(filterContact.toLowerCase())\n      ) ?? []\n    );\n  }, [filterContact, contacts]);\n\n  return (\n    <>\n      {error && <p>Contacts not found</p>}\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <List>\n          {visibleContacts?.map(({ id, name, number }) => (\n            <ContactItem key={id} name={name} number={number} id={id} />\n          ))}\n        </List>\n      )}\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 10px;\n  margin-top: 20px;\n  font-size: 20px;\n  width: 400px;\n  font-weight: 700;\n`;\n\nexport const Input = styled.input`\n  margin-top: 10px;\n  width: 400px;\n  padding: 5px;\n  margin-bottom: 10px;\n  border: 1px solid #030e1845;\n  border-radius: 5px;\n  box-shadow: 2px 2px 20px 10px rgba(0, 0, 0, 0.4);\n`;\n","import { Label, Input } from './Filter.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getFilter, filter } from 'redux/contacts/contactsSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filterName = useSelector(getFilter);\n\n  const handleInput = evt => {\n    dispatch(filter(evt.currentTarget.value));\n  };\n  return (\n    <Label>\n      Find contacts by name:\n      <Input\n        type=\"text\"\n        name=\"filter\"\n        value={filterName}\n        onChange={handleInput}\n      />\n    </Label>\n  );\n};\n","import styled from 'styled-components';\nimport img from 'images/cell-phones.jpg';\n\nexport const Container = styled.div`\n  background: url(${img});\n  background-size: cover;\n  background-position: center;\n  background-repeat: no-repeat;\n  height: 100vh;\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  padding-top: 50px;\n`;\n","import { Form } from 'components/Form';\nimport { ContactList } from 'components/ContactList';\nimport { Filter } from 'components/Filter';\nimport { useGetContactsQuery } from 'redux/contacts/contactsApi';\nimport { useAddContact } from 'redux/hooks/useAddContact';\nimport { Container } from './ContactsPage.styled';\n\nconst ContactsPage = () => {\n  const { data } = useGetContactsQuery();\n  const { register, handleSubmit, errors, isLoading, onSubmit } =\n    useAddContact();\n  return (\n    <Container>\n      <h1>Phonebook</h1>\n      <Form\n        btnText=\"Add contact\"\n        onSubmit={onSubmit}\n        isLoading={isLoading}\n        register={register}\n        handleSubmit={handleSubmit}\n        errors={errors}\n      />\n      {data && (data.length > 1 ? <Filter /> : '')}\n      <h2>Contacts</h2>\n      <ContactList />\n    </Container>\n  );\n};\n\nexport default ContactsPage;\n","import { useForm } from 'react-hook-form';\nimport {\n  useCreateContactMutation,\n  useGetContactsQuery,\n} from 'redux/contacts/contactsApi';\nimport { useEffect } from 'react';\nimport toast from 'react-hot-toast';\n\nexport const useAddContact = () => {\n  const {\n    register,\n    reset,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({\n    defaultValues: {\n      name: '',\n      number: '',\n    },\n    mode: 'onBlur',\n  });\n  const [createContact, { isLoading, isSuccess, isError }] =\n    useCreateContactMutation();\n  const { data: contacts } = useGetContactsQuery();\n\n  useEffect(() => {\n    if (isSuccess) {\n      toast.success('Contact added');\n    }\n    if (isError) {\n      toast.error('Sorry, try again');\n    }\n  }, [isSuccess, isError]);\n\n  const onSubmit = async values => {\n    try {\n      const contact = { name: values.name, number: values.number };\n      const findName = contacts.find(\n        contact => contact.name.toLowerCase() === values.name.toLowerCase()\n      );\n\n      if (findName) {\n        return toast.error(`${values.name} is already in contacts.`);\n      }\n      const findNumber = contacts.find(\n        contact => contact.number === values.number\n      );\n      if (findNumber) {\n        return toast.error('This phone number is already in contacts.');\n      } else {\n        createContact(contact);\n        reset();\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return { register, handleSubmit, errors, isLoading, onSubmit };\n};\n"],"names":["FormBox","styled","Label","Input","Error","BtnSubmit","StyledLoader","Loader","ariaLabel","height","width","radius","color","Form","btnText","onSubmit","contact","isLoading","register","handleSubmit","errors","autoComplete","htmlFor","id","type","defaultValue","name","required","minLength","value","message","pattern","placeholder","number","maxLength","disabled","variant","size","List","Item","AvatarIcon","Avatar","Delete","DeleteIcon","Edit","EditIcon","BtnDelete","Button","BtnEdit","Overlay","ModalBox","CloseBtn","modalRoot","document","querySelector","Modal","onClose","useGetContactsQuery","data","find","item","useUpdateContactMutation","updateContact","isSuccess","isError","useEffect","toast","fields","console","log","useForm","formState","useModalFormControl","handleKeyDown","e","code","window","addEventListener","removeEventListener","createPortal","onClick","currentTarget","target","Close","ContactItem","useDeleteContactMutation","deleteContact","isDeleting","useState","modalOpen","setModalOpen","showModal","prevState","charAt","toUpperCase","startIcon","isModalOpen","ContactList","contacts","error","filterContact","useSelector","getFilter","visibleContacts","useMemo","filter","toLowerCase","includes","map","Filter","dispatch","useDispatch","filterName","onChange","evt","Container","img","defaultValues","mode","reset","useCreateContactMutation","createContact","values","findName","findNumber","useAddContact","length"],"sourceRoot":""}